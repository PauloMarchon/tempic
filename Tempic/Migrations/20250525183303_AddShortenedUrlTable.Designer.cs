// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tempic.Data;

#nullable disable

namespace Tempic.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250525183303_AddShortenedUrlTable")]
    partial class AddShortenedUrlTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Tempic.Models.ImageMetadata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExpirationDateUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("MinioBucketName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MinioObjectName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalFileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UniqueLinkId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadDateUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UniqueLinkId")
                        .IsUnique();

                    b.ToTable("ImageMetadatas");
                });

            modelBuilder.Entity("Tempic.Models.ShortenedUrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDateUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ExpirationDateUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("ImageMetadataId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ImageUniqueLinkId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ImageMetadataId");

                    b.HasIndex("ImageUniqueLinkId")
                        .IsUnique();

                    b.HasIndex("ShortCode")
                        .IsUnique();

                    b.ToTable("ShortenedUrls");
                });

            modelBuilder.Entity("Tempic.Models.ShortenedUrl", b =>
                {
                    b.HasOne("Tempic.Models.ImageMetadata", "ImageMetadata")
                        .WithMany()
                        .HasForeignKey("ImageMetadataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tempic.Models.ImageMetadata", null)
                        .WithOne()
                        .HasForeignKey("Tempic.Models.ShortenedUrl", "ImageUniqueLinkId")
                        .HasPrincipalKey("Tempic.Models.ImageMetadata", "UniqueLinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImageMetadata");
                });
#pragma warning restore 612, 618
        }
    }
}
